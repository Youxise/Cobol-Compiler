Terminals unused in grammar

   mc_type
   mc_disp
   mc_read
   pvg
   egal
   comm
   apos


Rules useless in parser due to conflicts

   51 EXP: OPER C
   52    | OPER EXPRESSIONP
   53    | OPER EXPRESSION


État 81conflits: 1 décalage/réduction
État 129conflits: 8 réduction/réduction
État 130conflits: 8 réduction/réduction
État 131conflits: 8 réduction/réduction


Grammaire

    0 $accept: S $end

    1 S: mc_ident mc_prog idff point mc_data mc_work LIST_DEC mc_proc LIST_INSTR mc_stopr

    2 LIST_DEC: DEC LIST_DEC
    3         | /* vide */

    4 DEC: DEC_VAR
    5    | DEC_CST
    6    | DEC_TAB

    7 DEC_VAR: idff TYPE
    8        | idff sepv DEC_VAR

    9 DEC_CST: mc_const idff A

   10 A: TYPE
   11  | aff CST point

   12 DEC_TAB: idff mc_line csti virg mc_size csti TYPE

   13 LIST_INSTR: INSTR LIST_INSTR
   14           | /* vide */

   15 INSTR: AFFECTATION
   16      | IF_STAT
   17      | BOUCLE
   18      | LECTURE

   19 LECTURE: mc_acc parG gui1 SIGNE gui2 deup arob idff parD point

   20 SIGNE: ecom
   21      | hash
   22      | pcen
   23      | doll

   24 AFFECTATION: idff aff EXPRESSION point

   25 IF_STAT: mc_if parG CONDITIONS parD deup LIST_INSTR B

   26 B: mc_end
   27  | mc_else deup LIST_INSTR mc_end

   28 BOUCLE: mc_move idff mc_to idff LIST_INSTR mc_end
   29       | mc_move idff mc_to csti LIST_INSTR mc_end
   30       | mc_move csti mc_to idff LIST_INSTR mc_end

   31 EQ: mc_sup
   32   | mc_inf
   33   | mc_supe
   34   | mc_infe
   35   | mc_equi
   36   | mc_diff

   37 BETA: mc_ou
   38     | mc_et

   39 CONDITIONS: CONDITION_SIMPLE
   40           | CONDITION_COMPLEXE

   41 CONDITION_SIMPLE: CONDITION

   42 CONDITION_COMPLEXE: parG CONDITION parD BETA CONDITION_COMPLEXE
   43                   | parG CONDITION parD

   44 CONDITION: EXPRESSION EQ EXPRESSION
   45          | EXPRESSION
   46          | mc_non EXPRESSION

   47 EXPRESSION: C OPER C EXP
   48           | C OPER EXPRESSION
   49           | C
   50           | EXPRESSIONP

   51 EXP: OPER C
   52    | OPER EXPRESSIONP
   53    | OPER EXPRESSION

   54 EXPRESSIONP: parG EXPRESSION parD
   55            | parG EXPRESSION parD OPER EXPRESSION

   56 C: idff
   57  | CST

   58 OPER: add
   59     | sous
   60     | mult
   61     | divi

   62 TYPE: mc_int
   63     | mc_float
   64     | mc_char
   65     | mc_str

   66 CST: csti
   67    | cstf
   68    | cstch
   69    | cstst


Terminaux, suivis des règles où ils apparaissent

$end (0) 0
error (256)
mc_ident (258) 1
mc_data (259) 1
mc_prog (260) 1
mc_work (261) 1
mc_proc (262) 1
mc_stopr (263) 1
mc_et (264) 38
mc_ou (265) 37
mc_non (266) 46
mc_sup (267) 31
mc_inf (268) 32
mc_supe (269) 33
mc_infe (270) 34
mc_equi (271) 35
mc_diff (272) 36
mc_const (273) 9
mc_int (274) 62
mc_float (275) 63
mc_char (276) 64
mc_str (277) 65
mc_line (278) 12
mc_size (279) 12
mc_type (280)
mc_acc (281) 19
mc_disp (282)
mc_read (283)
mc_if (284) 25
mc_else (285) 27
mc_move (286) 28 29 30
mc_to (287) 28 29 30
mc_end (288) 26 27 28 29 30
csti (289) 12 29 30 66
cstf (290) 67
cstch (291) 68
cstst (292) 69
pvg (293)
egal (294)
aff (295) 11 24
add (296) 58
sous (297) 59
mult (298) 60
divi (299) 61
idff (300) 1 7 8 9 12 19 24 28 29 30 56
point (301) 1 11 19 24
parG (302) 19 25 42 43 54 55
parD (303) 19 25 42 43 54 55
sepv (304) 8
comm (305)
virg (306) 12
deup (307) 19 25 27
gui1 (308) 19
gui2 (309) 19
doll (310) 23
apos (311)
ecom (312) 20
arob (313) 19
pcen (314) 22
hash (315) 21


Non-terminaux, suivis des règles où ils apparaissent

$accept (61)
    à gauche: 0
S (62)
    à gauche: 1, à droite: 0
LIST_DEC (63)
    à gauche: 2 3, à droite: 1 2
DEC (64)
    à gauche: 4 5 6, à droite: 2
DEC_VAR (65)
    à gauche: 7 8, à droite: 4 8
DEC_CST (66)
    à gauche: 9, à droite: 5
A (67)
    à gauche: 10 11, à droite: 9
DEC_TAB (68)
    à gauche: 12, à droite: 6
LIST_INSTR (69)
    à gauche: 13 14, à droite: 1 13 25 27 28 29 30
INSTR (70)
    à gauche: 15 16 17 18, à droite: 13
LECTURE (71)
    à gauche: 19, à droite: 18
SIGNE (72)
    à gauche: 20 21 22 23, à droite: 19
AFFECTATION (73)
    à gauche: 24, à droite: 15
IF_STAT (74)
    à gauche: 25, à droite: 16
B (75)
    à gauche: 26 27, à droite: 25
BOUCLE (76)
    à gauche: 28 29 30, à droite: 17
EQ (77)
    à gauche: 31 32 33 34 35 36, à droite: 44
BETA (78)
    à gauche: 37 38, à droite: 42
CONDITIONS (79)
    à gauche: 39 40, à droite: 25
CONDITION_SIMPLE (80)
    à gauche: 41, à droite: 39
CONDITION_COMPLEXE (81)
    à gauche: 42 43, à droite: 40 42
CONDITION (82)
    à gauche: 44 45 46, à droite: 41 42 43
EXPRESSION (83)
    à gauche: 47 48 49 50, à droite: 24 44 45 46 48 53 54 55
EXP (84)
    à gauche: 51 52 53, à droite: 47
EXPRESSIONP (85)
    à gauche: 54 55, à droite: 50 52
C (86)
    à gauche: 56 57, à droite: 47 48 49 51
OPER (87)
    à gauche: 58 59 60 61, à droite: 47 48 51 52 53 55
TYPE (88)
    à gauche: 62 63 64 65, à droite: 7 10 12
CST (89)
    à gauche: 66 67 68 69, à droite: 11 57


état 0

    0 $accept: . S $end

    mc_ident  décalage et aller à l'état 1

    S  aller à l'état 2


état 1

    1 S: mc_ident . mc_prog idff point mc_data mc_work LIST_DEC mc_proc LIST_INSTR mc_stopr

    mc_prog  décalage et aller à l'état 3


état 2

    0 $accept: S . $end

    $end  décalage et aller à l'état 4


état 3

    1 S: mc_ident mc_prog . idff point mc_data mc_work LIST_DEC mc_proc LIST_INSTR mc_stopr

    idff  décalage et aller à l'état 5


état 4

    0 $accept: S $end .

    $défaut  accepter


état 5

    1 S: mc_ident mc_prog idff . point mc_data mc_work LIST_DEC mc_proc LIST_INSTR mc_stopr

    point  décalage et aller à l'état 6


état 6

    1 S: mc_ident mc_prog idff point . mc_data mc_work LIST_DEC mc_proc LIST_INSTR mc_stopr

    mc_data  décalage et aller à l'état 7


état 7

    1 S: mc_ident mc_prog idff point mc_data . mc_work LIST_DEC mc_proc LIST_INSTR mc_stopr

    mc_work  décalage et aller à l'état 8


état 8

    1 S: mc_ident mc_prog idff point mc_data mc_work . LIST_DEC mc_proc LIST_INSTR mc_stopr

    mc_const  décalage et aller à l'état 9
    idff      décalage et aller à l'état 10

    $défaut  réduction par utilisation de la règle 3 (LIST_DEC)

    LIST_DEC  aller à l'état 11
    DEC       aller à l'état 12
    DEC_VAR   aller à l'état 13
    DEC_CST   aller à l'état 14
    DEC_TAB   aller à l'état 15


état 9

    9 DEC_CST: mc_const . idff A

    idff  décalage et aller à l'état 16


état 10

    7 DEC_VAR: idff . TYPE
    8        | idff . sepv DEC_VAR
   12 DEC_TAB: idff . mc_line csti virg mc_size csti TYPE

    mc_int    décalage et aller à l'état 17
    mc_float  décalage et aller à l'état 18
    mc_char   décalage et aller à l'état 19
    mc_str    décalage et aller à l'état 20
    mc_line   décalage et aller à l'état 21
    sepv      décalage et aller à l'état 22

    TYPE  aller à l'état 23


état 11

    1 S: mc_ident mc_prog idff point mc_data mc_work LIST_DEC . mc_proc LIST_INSTR mc_stopr

    mc_proc  décalage et aller à l'état 24


état 12

    2 LIST_DEC: DEC . LIST_DEC

    mc_const  décalage et aller à l'état 9
    idff      décalage et aller à l'état 10

    $défaut  réduction par utilisation de la règle 3 (LIST_DEC)

    LIST_DEC  aller à l'état 25
    DEC       aller à l'état 12
    DEC_VAR   aller à l'état 13
    DEC_CST   aller à l'état 14
    DEC_TAB   aller à l'état 15


état 13

    4 DEC: DEC_VAR .

    $défaut  réduction par utilisation de la règle 4 (DEC)


état 14

    5 DEC: DEC_CST .

    $défaut  réduction par utilisation de la règle 5 (DEC)


état 15

    6 DEC: DEC_TAB .

    $défaut  réduction par utilisation de la règle 6 (DEC)


état 16

    9 DEC_CST: mc_const idff . A

    mc_int    décalage et aller à l'état 17
    mc_float  décalage et aller à l'état 18
    mc_char   décalage et aller à l'état 19
    mc_str    décalage et aller à l'état 20
    aff       décalage et aller à l'état 26

    A     aller à l'état 27
    TYPE  aller à l'état 28


état 17

   62 TYPE: mc_int .

    $défaut  réduction par utilisation de la règle 62 (TYPE)


état 18

   63 TYPE: mc_float .

    $défaut  réduction par utilisation de la règle 63 (TYPE)


état 19

   64 TYPE: mc_char .

    $défaut  réduction par utilisation de la règle 64 (TYPE)


état 20

   65 TYPE: mc_str .

    $défaut  réduction par utilisation de la règle 65 (TYPE)


état 21

   12 DEC_TAB: idff mc_line . csti virg mc_size csti TYPE

    csti  décalage et aller à l'état 29


état 22

    8 DEC_VAR: idff sepv . DEC_VAR

    idff  décalage et aller à l'état 30

    DEC_VAR  aller à l'état 31


état 23

    7 DEC_VAR: idff TYPE .

    $défaut  réduction par utilisation de la règle 7 (DEC_VAR)


état 24

    1 S: mc_ident mc_prog idff point mc_data mc_work LIST_DEC mc_proc . LIST_INSTR mc_stopr

    mc_acc   décalage et aller à l'état 32
    mc_if    décalage et aller à l'état 33
    mc_move  décalage et aller à l'état 34
    idff     décalage et aller à l'état 35

    $défaut  réduction par utilisation de la règle 14 (LIST_INSTR)

    LIST_INSTR   aller à l'état 36
    INSTR        aller à l'état 37
    LECTURE      aller à l'état 38
    AFFECTATION  aller à l'état 39
    IF_STAT      aller à l'état 40
    BOUCLE       aller à l'état 41


état 25

    2 LIST_DEC: DEC LIST_DEC .

    $défaut  réduction par utilisation de la règle 2 (LIST_DEC)


état 26

   11 A: aff . CST point

    csti   décalage et aller à l'état 42
    cstf   décalage et aller à l'état 43
    cstch  décalage et aller à l'état 44
    cstst  décalage et aller à l'état 45

    CST  aller à l'état 46


état 27

    9 DEC_CST: mc_const idff A .

    $défaut  réduction par utilisation de la règle 9 (DEC_CST)


état 28

   10 A: TYPE .

    $défaut  réduction par utilisation de la règle 10 (A)


état 29

   12 DEC_TAB: idff mc_line csti . virg mc_size csti TYPE

    virg  décalage et aller à l'état 47


état 30

    7 DEC_VAR: idff . TYPE
    8        | idff . sepv DEC_VAR

    mc_int    décalage et aller à l'état 17
    mc_float  décalage et aller à l'état 18
    mc_char   décalage et aller à l'état 19
    mc_str    décalage et aller à l'état 20
    sepv      décalage et aller à l'état 22

    TYPE  aller à l'état 23


état 31

    8 DEC_VAR: idff sepv DEC_VAR .

    $défaut  réduction par utilisation de la règle 8 (DEC_VAR)


état 32

   19 LECTURE: mc_acc . parG gui1 SIGNE gui2 deup arob idff parD point

    parG  décalage et aller à l'état 48


état 33

   25 IF_STAT: mc_if . parG CONDITIONS parD deup LIST_INSTR B

    parG  décalage et aller à l'état 49


état 34

   28 BOUCLE: mc_move . idff mc_to idff LIST_INSTR mc_end
   29       | mc_move . idff mc_to csti LIST_INSTR mc_end
   30       | mc_move . csti mc_to idff LIST_INSTR mc_end

    csti  décalage et aller à l'état 50
    idff  décalage et aller à l'état 51


état 35

   24 AFFECTATION: idff . aff EXPRESSION point

    aff  décalage et aller à l'état 52


état 36

    1 S: mc_ident mc_prog idff point mc_data mc_work LIST_DEC mc_proc LIST_INSTR . mc_stopr

    mc_stopr  décalage et aller à l'état 53


état 37

   13 LIST_INSTR: INSTR . LIST_INSTR

    mc_acc   décalage et aller à l'état 32
    mc_if    décalage et aller à l'état 33
    mc_move  décalage et aller à l'état 34
    idff     décalage et aller à l'état 35

    $défaut  réduction par utilisation de la règle 14 (LIST_INSTR)

    LIST_INSTR   aller à l'état 54
    INSTR        aller à l'état 37
    LECTURE      aller à l'état 38
    AFFECTATION  aller à l'état 39
    IF_STAT      aller à l'état 40
    BOUCLE       aller à l'état 41


état 38

   18 INSTR: LECTURE .

    $défaut  réduction par utilisation de la règle 18 (INSTR)


état 39

   15 INSTR: AFFECTATION .

    $défaut  réduction par utilisation de la règle 15 (INSTR)


état 40

   16 INSTR: IF_STAT .

    $défaut  réduction par utilisation de la règle 16 (INSTR)


état 41

   17 INSTR: BOUCLE .

    $défaut  réduction par utilisation de la règle 17 (INSTR)


état 42

   66 CST: csti .

    $défaut  réduction par utilisation de la règle 66 (CST)


état 43

   67 CST: cstf .

    $défaut  réduction par utilisation de la règle 67 (CST)


état 44

   68 CST: cstch .

    $défaut  réduction par utilisation de la règle 68 (CST)


état 45

   69 CST: cstst .

    $défaut  réduction par utilisation de la règle 69 (CST)


état 46

   11 A: aff CST . point

    point  décalage et aller à l'état 55


état 47

   12 DEC_TAB: idff mc_line csti virg . mc_size csti TYPE

    mc_size  décalage et aller à l'état 56


état 48

   19 LECTURE: mc_acc parG . gui1 SIGNE gui2 deup arob idff parD point

    gui1  décalage et aller à l'état 57


état 49

   25 IF_STAT: mc_if parG . CONDITIONS parD deup LIST_INSTR B

    mc_non  décalage et aller à l'état 58
    csti    décalage et aller à l'état 42
    cstf    décalage et aller à l'état 43
    cstch   décalage et aller à l'état 44
    cstst   décalage et aller à l'état 45
    idff    décalage et aller à l'état 59
    parG    décalage et aller à l'état 60

    CONDITIONS          aller à l'état 61
    CONDITION_SIMPLE    aller à l'état 62
    CONDITION_COMPLEXE  aller à l'état 63
    CONDITION           aller à l'état 64
    EXPRESSION          aller à l'état 65
    EXPRESSIONP         aller à l'état 66
    C                   aller à l'état 67
    CST                 aller à l'état 68


état 50

   30 BOUCLE: mc_move csti . mc_to idff LIST_INSTR mc_end

    mc_to  décalage et aller à l'état 69


état 51

   28 BOUCLE: mc_move idff . mc_to idff LIST_INSTR mc_end
   29       | mc_move idff . mc_to csti LIST_INSTR mc_end

    mc_to  décalage et aller à l'état 70


état 52

   24 AFFECTATION: idff aff . EXPRESSION point

    csti   décalage et aller à l'état 42
    cstf   décalage et aller à l'état 43
    cstch  décalage et aller à l'état 44
    cstst  décalage et aller à l'état 45
    idff   décalage et aller à l'état 59
    parG   décalage et aller à l'état 71

    EXPRESSION   aller à l'état 72
    EXPRESSIONP  aller à l'état 66
    C            aller à l'état 67
    CST          aller à l'état 68


état 53

    1 S: mc_ident mc_prog idff point mc_data mc_work LIST_DEC mc_proc LIST_INSTR mc_stopr .

    $défaut  réduction par utilisation de la règle 1 (S)


état 54

   13 LIST_INSTR: INSTR LIST_INSTR .

    $défaut  réduction par utilisation de la règle 13 (LIST_INSTR)


état 55

   11 A: aff CST point .

    $défaut  réduction par utilisation de la règle 11 (A)


état 56

   12 DEC_TAB: idff mc_line csti virg mc_size . csti TYPE

    csti  décalage et aller à l'état 73


état 57

   19 LECTURE: mc_acc parG gui1 . SIGNE gui2 deup arob idff parD point

    doll  décalage et aller à l'état 74
    ecom  décalage et aller à l'état 75
    pcen  décalage et aller à l'état 76
    hash  décalage et aller à l'état 77

    SIGNE  aller à l'état 78


état 58

   46 CONDITION: mc_non . EXPRESSION

    csti   décalage et aller à l'état 42
    cstf   décalage et aller à l'état 43
    cstch  décalage et aller à l'état 44
    cstst  décalage et aller à l'état 45
    idff   décalage et aller à l'état 59
    parG   décalage et aller à l'état 71

    EXPRESSION   aller à l'état 79
    EXPRESSIONP  aller à l'état 66
    C            aller à l'état 67
    CST          aller à l'état 68


état 59

   56 C: idff .

    $défaut  réduction par utilisation de la règle 56 (C)


état 60

   42 CONDITION_COMPLEXE: parG . CONDITION parD BETA CONDITION_COMPLEXE
   43                   | parG . CONDITION parD
   54 EXPRESSIONP: parG . EXPRESSION parD
   55            | parG . EXPRESSION parD OPER EXPRESSION

    mc_non  décalage et aller à l'état 58
    csti    décalage et aller à l'état 42
    cstf    décalage et aller à l'état 43
    cstch   décalage et aller à l'état 44
    cstst   décalage et aller à l'état 45
    idff    décalage et aller à l'état 59
    parG    décalage et aller à l'état 71

    CONDITION    aller à l'état 80
    EXPRESSION   aller à l'état 81
    EXPRESSIONP  aller à l'état 66
    C            aller à l'état 67
    CST          aller à l'état 68


état 61

   25 IF_STAT: mc_if parG CONDITIONS . parD deup LIST_INSTR B

    parD  décalage et aller à l'état 82


état 62

   39 CONDITIONS: CONDITION_SIMPLE .

    $défaut  réduction par utilisation de la règle 39 (CONDITIONS)


état 63

   40 CONDITIONS: CONDITION_COMPLEXE .

    $défaut  réduction par utilisation de la règle 40 (CONDITIONS)


état 64

   41 CONDITION_SIMPLE: CONDITION .

    $défaut  réduction par utilisation de la règle 41 (CONDITION_SIMPLE)


état 65

   44 CONDITION: EXPRESSION . EQ EXPRESSION
   45          | EXPRESSION .

    mc_sup   décalage et aller à l'état 83
    mc_inf   décalage et aller à l'état 84
    mc_supe  décalage et aller à l'état 85
    mc_infe  décalage et aller à l'état 86
    mc_equi  décalage et aller à l'état 87
    mc_diff  décalage et aller à l'état 88

    $défaut  réduction par utilisation de la règle 45 (CONDITION)

    EQ  aller à l'état 89


état 66

   50 EXPRESSION: EXPRESSIONP .

    $défaut  réduction par utilisation de la règle 50 (EXPRESSION)


état 67

   47 EXPRESSION: C . OPER C EXP
   48           | C . OPER EXPRESSION
   49           | C .

    add   décalage et aller à l'état 90
    sous  décalage et aller à l'état 91
    mult  décalage et aller à l'état 92
    divi  décalage et aller à l'état 93

    $défaut  réduction par utilisation de la règle 49 (EXPRESSION)

    OPER  aller à l'état 94


état 68

   57 C: CST .

    $défaut  réduction par utilisation de la règle 57 (C)


état 69

   30 BOUCLE: mc_move csti mc_to . idff LIST_INSTR mc_end

    idff  décalage et aller à l'état 95


état 70

   28 BOUCLE: mc_move idff mc_to . idff LIST_INSTR mc_end
   29       | mc_move idff mc_to . csti LIST_INSTR mc_end

    csti  décalage et aller à l'état 96
    idff  décalage et aller à l'état 97


état 71

   54 EXPRESSIONP: parG . EXPRESSION parD
   55            | parG . EXPRESSION parD OPER EXPRESSION

    csti   décalage et aller à l'état 42
    cstf   décalage et aller à l'état 43
    cstch  décalage et aller à l'état 44
    cstst  décalage et aller à l'état 45
    idff   décalage et aller à l'état 59
    parG   décalage et aller à l'état 71

    EXPRESSION   aller à l'état 98
    EXPRESSIONP  aller à l'état 66
    C            aller à l'état 67
    CST          aller à l'état 68


état 72

   24 AFFECTATION: idff aff EXPRESSION . point

    point  décalage et aller à l'état 99


état 73

   12 DEC_TAB: idff mc_line csti virg mc_size csti . TYPE

    mc_int    décalage et aller à l'état 17
    mc_float  décalage et aller à l'état 18
    mc_char   décalage et aller à l'état 19
    mc_str    décalage et aller à l'état 20

    TYPE  aller à l'état 100


état 74

   23 SIGNE: doll .

    $défaut  réduction par utilisation de la règle 23 (SIGNE)


état 75

   20 SIGNE: ecom .

    $défaut  réduction par utilisation de la règle 20 (SIGNE)


état 76

   22 SIGNE: pcen .

    $défaut  réduction par utilisation de la règle 22 (SIGNE)


état 77

   21 SIGNE: hash .

    $défaut  réduction par utilisation de la règle 21 (SIGNE)


état 78

   19 LECTURE: mc_acc parG gui1 SIGNE . gui2 deup arob idff parD point

    gui2  décalage et aller à l'état 101


état 79

   46 CONDITION: mc_non EXPRESSION .

    $défaut  réduction par utilisation de la règle 46 (CONDITION)


état 80

   42 CONDITION_COMPLEXE: parG CONDITION . parD BETA CONDITION_COMPLEXE
   43                   | parG CONDITION . parD

    parD  décalage et aller à l'état 102


état 81

   44 CONDITION: EXPRESSION . EQ EXPRESSION
   45          | EXPRESSION .
   54 EXPRESSIONP: parG EXPRESSION . parD
   55            | parG EXPRESSION . parD OPER EXPRESSION

    mc_sup   décalage et aller à l'état 83
    mc_inf   décalage et aller à l'état 84
    mc_supe  décalage et aller à l'état 85
    mc_infe  décalage et aller à l'état 86
    mc_equi  décalage et aller à l'état 87
    mc_diff  décalage et aller à l'état 88
    parD     décalage et aller à l'état 103

    parD  [réduction par utilisation de la règle 45 (CONDITION)]

    EQ  aller à l'état 89


état 82

   25 IF_STAT: mc_if parG CONDITIONS parD . deup LIST_INSTR B

    deup  décalage et aller à l'état 104


état 83

   31 EQ: mc_sup .

    $défaut  réduction par utilisation de la règle 31 (EQ)


état 84

   32 EQ: mc_inf .

    $défaut  réduction par utilisation de la règle 32 (EQ)


état 85

   33 EQ: mc_supe .

    $défaut  réduction par utilisation de la règle 33 (EQ)


état 86

   34 EQ: mc_infe .

    $défaut  réduction par utilisation de la règle 34 (EQ)


état 87

   35 EQ: mc_equi .

    $défaut  réduction par utilisation de la règle 35 (EQ)


état 88

   36 EQ: mc_diff .

    $défaut  réduction par utilisation de la règle 36 (EQ)


état 89

   44 CONDITION: EXPRESSION EQ . EXPRESSION

    csti   décalage et aller à l'état 42
    cstf   décalage et aller à l'état 43
    cstch  décalage et aller à l'état 44
    cstst  décalage et aller à l'état 45
    idff   décalage et aller à l'état 59
    parG   décalage et aller à l'état 71

    EXPRESSION   aller à l'état 105
    EXPRESSIONP  aller à l'état 66
    C            aller à l'état 67
    CST          aller à l'état 68


état 90

   58 OPER: add .

    $défaut  réduction par utilisation de la règle 58 (OPER)


état 91

   59 OPER: sous .

    $défaut  réduction par utilisation de la règle 59 (OPER)


état 92

   60 OPER: mult .

    $défaut  réduction par utilisation de la règle 60 (OPER)


état 93

   61 OPER: divi .

    $défaut  réduction par utilisation de la règle 61 (OPER)


état 94

   47 EXPRESSION: C OPER . C EXP
   48           | C OPER . EXPRESSION

    csti   décalage et aller à l'état 42
    cstf   décalage et aller à l'état 43
    cstch  décalage et aller à l'état 44
    cstst  décalage et aller à l'état 45
    idff   décalage et aller à l'état 59
    parG   décalage et aller à l'état 71

    EXPRESSION   aller à l'état 106
    EXPRESSIONP  aller à l'état 66
    C            aller à l'état 107
    CST          aller à l'état 68


état 95

   30 BOUCLE: mc_move csti mc_to idff . LIST_INSTR mc_end

    mc_acc   décalage et aller à l'état 32
    mc_if    décalage et aller à l'état 33
    mc_move  décalage et aller à l'état 34
    idff     décalage et aller à l'état 35

    $défaut  réduction par utilisation de la règle 14 (LIST_INSTR)

    LIST_INSTR   aller à l'état 108
    INSTR        aller à l'état 37
    LECTURE      aller à l'état 38
    AFFECTATION  aller à l'état 39
    IF_STAT      aller à l'état 40
    BOUCLE       aller à l'état 41


état 96

   29 BOUCLE: mc_move idff mc_to csti . LIST_INSTR mc_end

    mc_acc   décalage et aller à l'état 32
    mc_if    décalage et aller à l'état 33
    mc_move  décalage et aller à l'état 34
    idff     décalage et aller à l'état 35

    $défaut  réduction par utilisation de la règle 14 (LIST_INSTR)

    LIST_INSTR   aller à l'état 109
    INSTR        aller à l'état 37
    LECTURE      aller à l'état 38
    AFFECTATION  aller à l'état 39
    IF_STAT      aller à l'état 40
    BOUCLE       aller à l'état 41


état 97

   28 BOUCLE: mc_move idff mc_to idff . LIST_INSTR mc_end

    mc_acc   décalage et aller à l'état 32
    mc_if    décalage et aller à l'état 33
    mc_move  décalage et aller à l'état 34
    idff     décalage et aller à l'état 35

    $défaut  réduction par utilisation de la règle 14 (LIST_INSTR)

    LIST_INSTR   aller à l'état 110
    INSTR        aller à l'état 37
    LECTURE      aller à l'état 38
    AFFECTATION  aller à l'état 39
    IF_STAT      aller à l'état 40
    BOUCLE       aller à l'état 41


état 98

   54 EXPRESSIONP: parG EXPRESSION . parD
   55            | parG EXPRESSION . parD OPER EXPRESSION

    parD  décalage et aller à l'état 103


état 99

   24 AFFECTATION: idff aff EXPRESSION point .

    $défaut  réduction par utilisation de la règle 24 (AFFECTATION)


état 100

   12 DEC_TAB: idff mc_line csti virg mc_size csti TYPE .

    $défaut  réduction par utilisation de la règle 12 (DEC_TAB)


état 101

   19 LECTURE: mc_acc parG gui1 SIGNE gui2 . deup arob idff parD point

    deup  décalage et aller à l'état 111


état 102

   42 CONDITION_COMPLEXE: parG CONDITION parD . BETA CONDITION_COMPLEXE
   43                   | parG CONDITION parD .

    mc_et  décalage et aller à l'état 112
    mc_ou  décalage et aller à l'état 113

    $défaut  réduction par utilisation de la règle 43 (CONDITION_COMPLEXE)

    BETA  aller à l'état 114


état 103

   54 EXPRESSIONP: parG EXPRESSION parD .
   55            | parG EXPRESSION parD . OPER EXPRESSION

    add   décalage et aller à l'état 90
    sous  décalage et aller à l'état 91
    mult  décalage et aller à l'état 92
    divi  décalage et aller à l'état 93

    $défaut  réduction par utilisation de la règle 54 (EXPRESSIONP)

    OPER  aller à l'état 115


état 104

   25 IF_STAT: mc_if parG CONDITIONS parD deup . LIST_INSTR B

    mc_acc   décalage et aller à l'état 32
    mc_if    décalage et aller à l'état 33
    mc_move  décalage et aller à l'état 34
    idff     décalage et aller à l'état 35

    $défaut  réduction par utilisation de la règle 14 (LIST_INSTR)

    LIST_INSTR   aller à l'état 116
    INSTR        aller à l'état 37
    LECTURE      aller à l'état 38
    AFFECTATION  aller à l'état 39
    IF_STAT      aller à l'état 40
    BOUCLE       aller à l'état 41


état 105

   44 CONDITION: EXPRESSION EQ EXPRESSION .

    $défaut  réduction par utilisation de la règle 44 (CONDITION)


état 106

   48 EXPRESSION: C OPER EXPRESSION .

    $défaut  réduction par utilisation de la règle 48 (EXPRESSION)


état 107

   47 EXPRESSION: C . OPER C EXP
   47           | C OPER C . EXP
   48           | C . OPER EXPRESSION
   49           | C .

    add   décalage et aller à l'état 90
    sous  décalage et aller à l'état 91
    mult  décalage et aller à l'état 92
    divi  décalage et aller à l'état 93

    $défaut  réduction par utilisation de la règle 49 (EXPRESSION)

    EXP   aller à l'état 117
    OPER  aller à l'état 118


état 108

   30 BOUCLE: mc_move csti mc_to idff LIST_INSTR . mc_end

    mc_end  décalage et aller à l'état 119


état 109

   29 BOUCLE: mc_move idff mc_to csti LIST_INSTR . mc_end

    mc_end  décalage et aller à l'état 120


état 110

   28 BOUCLE: mc_move idff mc_to idff LIST_INSTR . mc_end

    mc_end  décalage et aller à l'état 121


état 111

   19 LECTURE: mc_acc parG gui1 SIGNE gui2 deup . arob idff parD point

    arob  décalage et aller à l'état 122


état 112

   38 BETA: mc_et .

    $défaut  réduction par utilisation de la règle 38 (BETA)


état 113

   37 BETA: mc_ou .

    $défaut  réduction par utilisation de la règle 37 (BETA)


état 114

   42 CONDITION_COMPLEXE: parG CONDITION parD BETA . CONDITION_COMPLEXE

    parG  décalage et aller à l'état 123

    CONDITION_COMPLEXE  aller à l'état 124


état 115

   55 EXPRESSIONP: parG EXPRESSION parD OPER . EXPRESSION

    csti   décalage et aller à l'état 42
    cstf   décalage et aller à l'état 43
    cstch  décalage et aller à l'état 44
    cstst  décalage et aller à l'état 45
    idff   décalage et aller à l'état 59
    parG   décalage et aller à l'état 71

    EXPRESSION   aller à l'état 125
    EXPRESSIONP  aller à l'état 66
    C            aller à l'état 67
    CST          aller à l'état 68


état 116

   25 IF_STAT: mc_if parG CONDITIONS parD deup LIST_INSTR . B

    mc_else  décalage et aller à l'état 126
    mc_end   décalage et aller à l'état 127

    B  aller à l'état 128


état 117

   47 EXPRESSION: C OPER C EXP .

    $défaut  réduction par utilisation de la règle 47 (EXPRESSION)


état 118

   47 EXPRESSION: C OPER . C EXP
   48           | C OPER . EXPRESSION
   51 EXP: OPER . C
   52    | OPER . EXPRESSIONP
   53    | OPER . EXPRESSION

    csti   décalage et aller à l'état 42
    cstf   décalage et aller à l'état 43
    cstch  décalage et aller à l'état 44
    cstst  décalage et aller à l'état 45
    idff   décalage et aller à l'état 59
    parG   décalage et aller à l'état 71

    EXPRESSION   aller à l'état 129
    EXPRESSIONP  aller à l'état 130
    C            aller à l'état 131
    CST          aller à l'état 68


état 119

   30 BOUCLE: mc_move csti mc_to idff LIST_INSTR mc_end .

    $défaut  réduction par utilisation de la règle 30 (BOUCLE)


état 120

   29 BOUCLE: mc_move idff mc_to csti LIST_INSTR mc_end .

    $défaut  réduction par utilisation de la règle 29 (BOUCLE)


état 121

   28 BOUCLE: mc_move idff mc_to idff LIST_INSTR mc_end .

    $défaut  réduction par utilisation de la règle 28 (BOUCLE)


état 122

   19 LECTURE: mc_acc parG gui1 SIGNE gui2 deup arob . idff parD point

    idff  décalage et aller à l'état 132


état 123

   42 CONDITION_COMPLEXE: parG . CONDITION parD BETA CONDITION_COMPLEXE
   43                   | parG . CONDITION parD

    mc_non  décalage et aller à l'état 58
    csti    décalage et aller à l'état 42
    cstf    décalage et aller à l'état 43
    cstch   décalage et aller à l'état 44
    cstst   décalage et aller à l'état 45
    idff    décalage et aller à l'état 59
    parG    décalage et aller à l'état 71

    CONDITION    aller à l'état 80
    EXPRESSION   aller à l'état 65
    EXPRESSIONP  aller à l'état 66
    C            aller à l'état 67
    CST          aller à l'état 68


état 124

   42 CONDITION_COMPLEXE: parG CONDITION parD BETA CONDITION_COMPLEXE .

    $défaut  réduction par utilisation de la règle 42 (CONDITION_COMPLEXE)


état 125

   55 EXPRESSIONP: parG EXPRESSION parD OPER EXPRESSION .

    $défaut  réduction par utilisation de la règle 55 (EXPRESSIONP)


état 126

   27 B: mc_else . deup LIST_INSTR mc_end

    deup  décalage et aller à l'état 133


état 127

   26 B: mc_end .

    $défaut  réduction par utilisation de la règle 26 (B)


état 128

   25 IF_STAT: mc_if parG CONDITIONS parD deup LIST_INSTR B .

    $défaut  réduction par utilisation de la règle 25 (IF_STAT)


état 129

   48 EXPRESSION: C OPER EXPRESSION .
   53 EXP: OPER EXPRESSION .

    mc_sup   réduction par utilisation de la règle 48 (EXPRESSION)
    mc_sup   [réduction par utilisation de la règle 53 (EXP)]
    mc_inf   réduction par utilisation de la règle 48 (EXPRESSION)
    mc_inf   [réduction par utilisation de la règle 53 (EXP)]
    mc_supe  réduction par utilisation de la règle 48 (EXPRESSION)
    mc_supe  [réduction par utilisation de la règle 53 (EXP)]
    mc_infe  réduction par utilisation de la règle 48 (EXPRESSION)
    mc_infe  [réduction par utilisation de la règle 53 (EXP)]
    mc_equi  réduction par utilisation de la règle 48 (EXPRESSION)
    mc_equi  [réduction par utilisation de la règle 53 (EXP)]
    mc_diff  réduction par utilisation de la règle 48 (EXPRESSION)
    mc_diff  [réduction par utilisation de la règle 53 (EXP)]
    point    réduction par utilisation de la règle 48 (EXPRESSION)
    point    [réduction par utilisation de la règle 53 (EXP)]
    parD     réduction par utilisation de la règle 48 (EXPRESSION)
    parD     [réduction par utilisation de la règle 53 (EXP)]
    $défaut  réduction par utilisation de la règle 48 (EXPRESSION)


état 130

   50 EXPRESSION: EXPRESSIONP .
   52 EXP: OPER EXPRESSIONP .

    mc_sup   réduction par utilisation de la règle 50 (EXPRESSION)
    mc_sup   [réduction par utilisation de la règle 52 (EXP)]
    mc_inf   réduction par utilisation de la règle 50 (EXPRESSION)
    mc_inf   [réduction par utilisation de la règle 52 (EXP)]
    mc_supe  réduction par utilisation de la règle 50 (EXPRESSION)
    mc_supe  [réduction par utilisation de la règle 52 (EXP)]
    mc_infe  réduction par utilisation de la règle 50 (EXPRESSION)
    mc_infe  [réduction par utilisation de la règle 52 (EXP)]
    mc_equi  réduction par utilisation de la règle 50 (EXPRESSION)
    mc_equi  [réduction par utilisation de la règle 52 (EXP)]
    mc_diff  réduction par utilisation de la règle 50 (EXPRESSION)
    mc_diff  [réduction par utilisation de la règle 52 (EXP)]
    point    réduction par utilisation de la règle 50 (EXPRESSION)
    point    [réduction par utilisation de la règle 52 (EXP)]
    parD     réduction par utilisation de la règle 50 (EXPRESSION)
    parD     [réduction par utilisation de la règle 52 (EXP)]
    $défaut  réduction par utilisation de la règle 50 (EXPRESSION)


état 131

   47 EXPRESSION: C . OPER C EXP
   47           | C OPER C . EXP
   48           | C . OPER EXPRESSION
   49           | C .
   51 EXP: OPER C .

    add   décalage et aller à l'état 90
    sous  décalage et aller à l'état 91
    mult  décalage et aller à l'état 92
    divi  décalage et aller à l'état 93

    mc_sup   réduction par utilisation de la règle 49 (EXPRESSION)
    mc_sup   [réduction par utilisation de la règle 51 (EXP)]
    mc_inf   réduction par utilisation de la règle 49 (EXPRESSION)
    mc_inf   [réduction par utilisation de la règle 51 (EXP)]
    mc_supe  réduction par utilisation de la règle 49 (EXPRESSION)
    mc_supe  [réduction par utilisation de la règle 51 (EXP)]
    mc_infe  réduction par utilisation de la règle 49 (EXPRESSION)
    mc_infe  [réduction par utilisation de la règle 51 (EXP)]
    mc_equi  réduction par utilisation de la règle 49 (EXPRESSION)
    mc_equi  [réduction par utilisation de la règle 51 (EXP)]
    mc_diff  réduction par utilisation de la règle 49 (EXPRESSION)
    mc_diff  [réduction par utilisation de la règle 51 (EXP)]
    point    réduction par utilisation de la règle 49 (EXPRESSION)
    point    [réduction par utilisation de la règle 51 (EXP)]
    parD     réduction par utilisation de la règle 49 (EXPRESSION)
    parD     [réduction par utilisation de la règle 51 (EXP)]
    $défaut  réduction par utilisation de la règle 49 (EXPRESSION)

    EXP   aller à l'état 117
    OPER  aller à l'état 118


état 132

   19 LECTURE: mc_acc parG gui1 SIGNE gui2 deup arob idff . parD point

    parD  décalage et aller à l'état 134


état 133

   27 B: mc_else deup . LIST_INSTR mc_end

    mc_acc   décalage et aller à l'état 32
    mc_if    décalage et aller à l'état 33
    mc_move  décalage et aller à l'état 34
    idff     décalage et aller à l'état 35

    $défaut  réduction par utilisation de la règle 14 (LIST_INSTR)

    LIST_INSTR   aller à l'état 135
    INSTR        aller à l'état 37
    LECTURE      aller à l'état 38
    AFFECTATION  aller à l'état 39
    IF_STAT      aller à l'état 40
    BOUCLE       aller à l'état 41


état 134

   19 LECTURE: mc_acc parG gui1 SIGNE gui2 deup arob idff parD . point

    point  décalage et aller à l'état 136


état 135

   27 B: mc_else deup LIST_INSTR . mc_end

    mc_end  décalage et aller à l'état 137


état 136

   19 LECTURE: mc_acc parG gui1 SIGNE gui2 deup arob idff parD point .

    $défaut  réduction par utilisation de la règle 19 (LECTURE)


état 137

   27 B: mc_else deup LIST_INSTR mc_end .

    $défaut  réduction par utilisation de la règle 27 (B)
